#!/bin/bash
set -euo pipefail

# Usage: safe-wrapper chown owner[:group] path...
if [[ $# -lt 2 ]]; then
  echo "Usage: $0 chown {job|job:job|miniclust|miniclust:miniclust} paths..." >&2
  exit 2
fi

cmd="$1"; shift

# Only allow chown as the command
if [[ "$cmd" != "chown" ]]; then
  echo "Only 'chown' is allowed as a command, got: $cmd" >&2
  exit 2
fi

owner="$1"; shift

# Only allow these owners
case "$owner" in
  job|job:job|miniclust|miniclust:miniclust) ;;
  *)
    echo "Owner not allowed: $owner" >&2
    exit 2
    ;;
esac

# Disallow dangerous paths outside /tmp and /home
for p in "$@"; do
  canon=$(realpath -m -- "$p")
  case "$canon" in
    /tmp|/tmp/*|/home|/home/*) ;;
    *)
      echo "Refusing to operate on forbidden path: $p (resolved to $canon)" >&2
      exit 3
      ;;
  esac
done

# Execute chown with safe flags: -hPR
exec /bin/chown -hPR "$owner" "$@"
